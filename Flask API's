from werkzeug.wrappers import Request, Response
from flask import Flask
app = Flask(__name__)

@app.route("/")
def dashboard():
    
    '''
    Counter_API: Total number of positive,negative and neutral sentiment across all the projects.
        Output : # of +ve sentiment, # of -ve sentiment , # of neutral sentiment
    ------------------------------------------------------------------------------------------------------------------------
    Project wise sentiment : gives # of each sentiment project wise.
        Like, For Project A: # of +ve sentiment, # of -ve sentiment , # of neutral sentiment
              For Project B: # of +ve sentiment, # of -ve sentiment , # of neutral sentiment......etc.,
        Output : Project name with # of +ve sentiment, # of -ve sentiment , # of neutral sentiment
    ------------------------------------------------------------------------------------------------------------------------
    Sentiment comparision given project name and months/time: Gives # of sentiments for given week/months/year
        Like, For Project A: # of +ve sentiment, # of -ve sentiment , # of neutral sentiment FOR MONTH X
                             # of +ve sentiment, # of -ve sentiment , # of neutral sentiment FOR MONTH X-1
                             # of +ve sentiment, # of -ve sentiment , # of neutral sentiment FOR MONTH X-2
        Input: Project_name,month/year/week
        Output: Current month - 2/3 # of +ve sentiment, # of -ve sentiment , # of neutral sentiment for each month/year/week
    ------------------------------------------------------------------------------------------------------------------------
    Category wise sentiment: Gives # of +ve sentiment, # of -ve sentiment , # of neutral sentiment 
                             for each category in the project
        Like, Project A: 
              Category 1 : # of +ve sentiment, # of -ve sentiment , # of neutral sentiment
              Category 2 : # of +ve sentiment, # of -ve sentiment , # of neutral sentiment
              Category 3 : # of +ve sentiment, # of -ve sentiment , # of neutral sentiment
        Input: Project_name
        Output: Category_name ,# of +ve sentiment, # of -ve sentiment , # of neutral sentiment
    ------------------------------------------------------------------------------------------------------------------------
    Category wise comparision given project name and time(week/month/year): Gives comparision of each category's 
        sentiment's comparision week/month/year wise
        Like, Project A:
              Category 1 : # of +ve sentiment, # of -ve sentiment , # of neutral sentiment FOR MONTH X
                           # of +ve sentiment, # of -ve sentiment , # of neutral sentiment FOR MONTH X-1
                           # of +ve sentiment, # of -ve sentiment , # of neutral sentiment FOR MONTH X-2
              
              Category 2 : # of +ve sentiment, # of -ve sentiment , # of neutral sentiment FOR MONTH X
                           # of +ve sentiment, # of -ve sentiment , # of neutral sentiment FOR MONTH X-1
                           # of +ve sentiment, # of -ve sentiment , # of neutral sentiment FOR MONTH X-2
              
        Input: Project_name,time(week/month/year)
        Output:Category , # of +ve sentiment, # of -ve sentiment , # of neutral sentiment
        
    ------------------------------------------------------------------------------------------------------------------------
    Other than these API's : 
        List of Projects
        List of Category
        List of months/week/year
    
    '''

    return 'dashboard.html'


@app.route("/sentiment")
def sentiment():

    '''
    Project_name API call
    Show Content of the project API
    Show Project's sentiment details : 
    Update sentiment: 
    List of keywords API:
    '''

    return 'sentiment.html'


@app.route("/action")
def action():

    '''
    Project_name API call
    List of Actions
    
    '''

    return 'sentiment.html'



if __name__ == '__main__':
    from werkzeug.serving import run_simple
    run_simple('localhost', 9000, app)



----------------------------------------------------------------------------------------------------------------------------------
from urllib.parse import urlencode
from urllib.request import Request, urlopen

url = 'https://httpbin.org/post' # Set destination URL here
post_fields = {'foo': 'bar'}     # Set POST fields here

request = Request(url, urlencode(post_fields).encode())
json = urlopen(request).read().decode()
print(json)


----------------------------------------------------------------------------------------------------------------------------------
import string
import httplib
import urllib2

host = "www.mywbsite.fr/sport/multiplex.aspx"
    params='"isLeftColumn":"false","liveID":"-1","userIpCountryCode":"FR","version":"null","languageCode":"fr","siteCode":"frfr","Quotation":"eu"'

headers = { Host: www.mywbsite.fr,
"Connection": "keep-alive",
"Content-Length": 129,
"Origin": "https://www.mywbsite.fr",
"X-Requested-With": "XMLHttpRequest",
"User-Agent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.52 Safari/536.5",
"Content-Type": "application/json",
"Accept": "*/*",
"Referer": "https://www.mywbsite.fr/data/mult.aspx",
"Accept-Encoding": "gzip,deflate,sdch",
"Accept-Language": "fr-FR,fr;q=0.8,en-US;q=0.6,en;q=0.4",
"Accept-Charset": "ISO-8859-1,utf-8;q=0.7,*;q=0.3",
"Cookie": "ASP.NET_SessionId=j1r1b2a2v2w245; GSFV=FirstVisit=;     GSRef=https://www.google.fr/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&ved=0CHgQFjAA&url=https://www.mywbsite.fr/&ei=FZq_T4abNcak0QWZ0vnWCg&usg=AFQjCNHq90dwj5RiEfr1Pw; HelpRotatorCookie=HelpLayerWasSeen=0; NSC_GSPOUGS!TTM=ffffffff09f4f58455e445a4a423660; GS=Site=frfr; __utma=1.219229010.1337956889.1337956889.1337958824.2; __utmb=1.1.10.1337958824; __utmc=1; __utmz=1.1337956889.1.1.utmcsr=google|utmccn=(organic)|utmcmd=organic|utmctr=(not%20provided)"

}

url = "/Services/GetFromDataBaseVersionned"

# POST the request
conn = httplib.HTTPConnection(host,port=443)
conn.request("POST",url,params,headers)
response = conn.getresponse()

data = response.read()
print data
